% miFit configuration script file: miFit interface to iFit
%
% specific configuration plug-in for neutron scattering/Phonons items
% import with mifit('path_to/neutrons_Phonons.ini')
config.Menu_Neutron_Scattering = { ...
  'Phonons: Model from chemical formula/file...','mifit(sqw_phonons);', ...
  'Phonons: Plot Model in Qh=0 plane', [ 'tmp_m=getappdata(mifit, ''CurrentModel''); ' ...
    'tmp_qh=linspace(0, 0.75, 50); ' ...
    'try   tmp_w=linspace(0.01, max(tmp_m.UserData.maxFreq), 51); ' ...
    'catch tmp_w=linspace(0.01, 100, 51); end; ' ...
    'tmp_f=iData(tmp_m, [], tmp_qh,tmp_qh,tmp_qh'', tmp_w); ' ...
    'mifit(tmp_m); plot3(log(tmp_f(1,:,:,:))); ' ...
    'clear tmp_m tmp_qh tmp_w tmp_f' ], ...
  'Phonons: Slice Model in Qh=0 plane', [ 'tmp_m=getappdata(mifit, ''CurrentModel''); ' ...
    'tmp_qh=linspace(0, 0.75, 50); ' ...
    'try   tmp_w=linspace(0.01, max(tmp_m.UserData.maxFreq), 51); ' ...
    'catch tmp_w=linspace(0.01, 100, 51); end;  ' ...
    'tmp_f=iData(tmp_m, [], tmp_qh,tmp_qh,tmp_qh'', tmp_w); mifit(tmp_m);' ...
    'slice(log(tmp_f(1,:,:,:))); clear tmp_m tmp_qh tmp_w tmp_f' ], ...
  'Phonons: Density of states from Model', ...
    'tmp_m=getappdata(mifit, ''CurrentModel''); plot(sqw_phonon_dos(tmp_m)); mifit(tmp_m); clear tmp_m', ...
  'Phonons: Thermo-chemistry basic quantities from Model', ...
    'tmp_m=getappdata(mifit, ''CurrentModel''); sqw_thermochemistry(tmp_m); mifit(tmp_m); clear tmp_m', ...
  'Phonons: Dispersion curves along axes from Model', ...
    'tmp_m=getappdata(mifit, ''CurrentModel''); sqw_kpath(tmp_m); mifit(tmp_m); clear tmp_m', ...
  'Phonons: Powder average from Model', ...
    'tmp_pow=sqw_powder(getappdata(mifit, ''CurrentModel'')); mifit(tmp_pow); plot(log(tmp_pow)); clear tmp_pow;' };
