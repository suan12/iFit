% miFit configuration script file: miFit interface to iFit
%
% specific configuration plug-in for neutron scattering/McStas items
% import with mifit('path_to/neutrons_McStas.ini')
config.Menu_Neutron_Scattering = { ...
  'McStas: Open instrument file...','mifit(''push'', mccode('''', ''compile=1''))', ...
  'McStas: Open instrument example...', 'mifit(''push'', mccode(''gui'', ''compile=1''));', ...
  'McStas: View selected model instrument geometry...', 'mccode_display(mifit(''pull''));', ...
  'McStas: Compute instrument single step/scans...', ...
    [ '[tmp_v, tmp_m]=mccode_run(mifit(''pull''));' ...
      'mifit(''push'', tmp_v); mifit(''push'', tmp_v); clear tmp_m tmp_v' ], ...
  'McStas: help','doc(iData,''McStas.html'')' };
  
m = mifit('pull');
% the 4 first items are simulation options
for f={'ncount','gravitation','mpi','seed'}; options.(f{1}) = m.UserData.options.(f{1}); end
% then we have numel(m.Parameters) scalar parameters
p1 = cell2struct(num2cell(m.ParameterValues(:)), strtok(m.Parameters(:)), 1);
% and finally numel(fieldnames(m.UserData.Parameters_Constant)) others
p2 = m.UserData.Parameters_Constant;
dlg.Name = m.Name;
dlg.TooltipString = m.Name;
answer = inputdlg(cat(options, p1, p2), dlg);
% treat the answer
for f={'ncount','gravitation','mpi','seed'}; m.UserData.options.(f{1}) = answer.(f{1}); end
for f=m.Parameters(:)'; 
  m.(f{1}) = answer.(f{1}); 
  p.(f{1}) = answer.(f{1}); % can also be a vector (scan)
end
if ~isempty(m.UserData.Parameters_Constant)
  for f=fieldnames(m.UserData.Parameters_Constant)
    m.UserData.Parameters_Constant.(f{1}) = answer.(f{1});
  end
end
mifit('push',m);  % update model
% run it
v = iData(model, p, nan); % we want the raw data
mifit('push',v);

